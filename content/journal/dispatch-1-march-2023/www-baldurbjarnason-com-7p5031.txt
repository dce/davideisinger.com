  • Essays
  • Newsletter
  • Ebook
  • Contact

Baldur Bjarnason

Web dev at the end of the world, from Hveragerði, Iceland

I’m available as a consultant. I also have a book out.

21 November 2022

Programming is a Pop Culture

(What follows is an extract from Out of the Software Crisis, lightly edited to
work as a blog post.)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


    So I think what happened is computing has turned into pop culture and the
    universities are not helping in general, at least not in the US.

    So, Cicero---anybody know a good Cicero quote having to do with the present
    and past? Let's check your classical education here. So, you know who
    Cicero was. He was one of those old Roman guys.

    So, Cicero once wrote: 'He who knows only his own generation remains
    forever a child.'

Programming and Scaling (Alan Kay, 2011)

The programming pop culture defines change—any change—as progress. Most
developers, myself included, have a fascination with novelty. If it’s new, then
it must be an improvement. You even hear this stated outright as an argument by
developers: it’s newer and therefore better. Trends in software development are
rarely based on objective observation or sensible practice. This endless
chasing of trends leads to projects being needlessly rewritten, code being
abandoned, and new projects being started when fixing the bugs in an old
project would have done the same. The stocks of the software development system
are flushed out at a moment’s notice simply because the developers found
something shinier.

Experienced developers are aware of this tendency in themselves and work to
mitigate it, but younger developers are often under the mistaken impression
that this is how software development works. Unless they can pare back this
tendency or are matched with teammates who hold them back, this tendency can
lead to immense destruction of value for an organisation.

Pop cultures favour the visual aesthetic of the day. We all know what sort of
aesthetic designers commonly favour. Small, low-contrast text, lots of
whitespace, no pure whites or pure blacks (just greys). The details vary with
fashion, but each generation of designers has a preferred visual aesthetic.
That aesthetic tests poorly; the text is illegible; the layout doesn’t have
enough contrast. The information density is so sparse it’s effectively
non-existent.

Looks pretty, though.

Coders have a similar tendency, their preferred aesthetic is just a bit
different, but as with designers, it tests horribly when put in front of
genuine users. The exact details of the preferred aesthetic tend to vary from
generation to generation. One group prefers light-on-dark text (despite not
suffering from conditions that benefit from dark mode) and unusable
hyper-complex layouts where everything is configurable. Another group goes for
ultra-minimalism where nothing is shown by default. You constantly scrub around
and hunt for a button, a widget—anything that even vaguely resembles an
affordance. This is usually not an issue if you have designers on the team. If
you’re letting the programmers design the user interface or are a programmer
designing a user interface, you need to be aware of it.

But this adherence to a specific aesthetic isn’t limited to designs. It’s also
an issue when it comes to the code itself.

The programming pop culture favours specific code aesthetics based on the
trends of the day. I’m not talking about code style or formatting. The code in
a project should adhere to a single style, simple as that. The issue is that
the programming pop culture demands that code exhibit the latest popular
aesthetics of rigour, formality, and cleverness. Whether the code actually is
rigorous, formal, or clever matters less. A few years ago, as the popularity of
the Ruby programming language peaked, a certain dynamism and trickery were en
vogue. It didn’t matter if you were writing in Ruby, JavaScript, or
Objective-C. Your code had to have a level of “magic” to it. Metaprogramming,
syntax-hacking languages to create ad hoc Domain-Specific Languages, tricks
with extreme late binding, and more were frequent topics on developer weblogs
and forums. Even a phrase like “objective-c runtime metaprogramming” will date
you to a specific generation of native app developers almost down to a single
year.

As with all of these pop culture trends in programming, this led to unreadable
code that was impossible to work with or fix as soon as it faded from popular
consciousness.

The current trend is towards the aesthetics of correctness. Everything has to
look like it has strong or static typing. It doesn’t have to really have static
typing. That can all be made up after the fact in a declaration file. It merely
needs to have the aesthetics of types. Type annotations everywhere,
implementing logic through type system trickery, and forcing any and all
dynamism out of the system in the name of correctness is the name of the game.

A part of this trend is the unpopularity of the approaches and languages that
are seen as less rigorous. CSS is dropped in favour of statically typed
CSS-in-JS approaches. HTML is dropped in favour of a strict inline XML-like
markup format called JSX. Just a few years ago, everybody in web development
hated and dropped XML and XHTML specifically because it was too strict and felt
less dynamic and flexible than HTML. At some point, pop culture will bore of
this and swing its attention back the other way.

It’s a fashion industry. Trends come; trends go. The lack of historical
awareness is considered by most to be a feature.

This rigour is useful in moderation. Static typing does prevent bugs. Usually,
they are the same sort of bugs unit testing prevents. Both have immense value
as tools to manage your software development. Currently, the fashion is to
favour static typing over unit testing for establishing a certain base level of
correctness in your code. At some point, they are likely to switch again. They
have a couple of times in the past. That you could use both at the same time
and get the benefits of both doesn’t enter the discourse. Static typing with
compile-time correctness checks has its uses. So do dynamism, extreme late
binding, and metaprogramming. Most of these approaches can be used together,
but that isn’t how pop culture works. Pop culture demands there be only one
winner at a time. Choose one, not whichever works the best at each time.

Product development can’t indulge in being pop culture. Be wary of these
popularity contests.

These issues with programming culture aren’t new.

Jamie Zawinski calls it the “Cascade of Attention-Deficit Teenagers” model. We
can’t do much to change the nature of the field by now—Alan Kay has certainly
tried—but we can mitigate the harm done by the trend-seeking. We can work to
ensure that everybody on the team, programmers and designers, is aligned, and
have the same understanding of what matters and how to accomplish it.

For that, you need everybody to understand the context they are working in—the
works of their field and how they are received. You need to develop taste and
understanding.

You need research.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Bonus Alan Kay quote on programming as a pop culture that I didn’t include in
the book:

    But pop culture holds a disdain for history. Pop culture is all about
    identity and feeling like you’re participating. It has nothing to do with
    cooperation, the past or the future—it’s living in the present. I think the
    same is true of most people who write code for money. They have no idea
    where [their culture came from]—and the Internet was done so well that most
    people think of it as a natural resource like the Pacific Ocean, rather
    than something that was man-made.

Alan Kay, Dr. Dobb’s Interview with Alan Kay

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Out of the Software Crisis

Out of the Software Crisis by Baldur Bjarnason

Software projects keep failing, not because we don’t have the right team or
tools but because our software development system is broken. Out of the
Software Crisis is a guide to fixing your software projects with
systems-thinking making them more resilient to change and less likely to fail.

Systems-Thinking For Software Projects

WTF is a Framework? 

The response to Out of the Software Crisis has been amazing

Join the Newsletter

Subscribe to the Out of the Software Crisis newsletter to get my weekly (at
least) essays on how to avoid or get out of software development crises.

Join now and get a free PDF of three bonus essays from Out of the Software
Crisis.

[                    ]
Subscribe

We respect your privacy.

Unsubscribe at any time.

Archive

Writing

  • GDPR and American AIs 3 April 2023
  • Regulating AI (plus links & notes) 27 March 2023
  • AI summaries and AI healthcare (links & notes) 20 March 2023
  • Keeping up with and assessing AI research (links & notes) 13 March 2023
  • Waiting for the AI Godot (Links & Notes) 6 March 2023
  • Copyright, Situating Search, and other links & notes 27 February 2023
  • Deno, Shakespeare's Emoticon, Return to Office, and other links and notes 
    20 February 2023
  • Book production, AI, Single-Page-Apps, and other links and notes 13
    February 2023
  • Some thoughts on how to make a book, three months after I made one 10
    February 2023
  • AI is a Hail Mary pass and other links & notes 6 February 2023
  • EU and copyright protections for AI-generated works and other notes 30
    January 2023
  • On the Layoffs, Narcissists, and Other Links & Notes 23 January 2023
  • Madeline, Existential Terror and other links & notes 16 January 2023
  • Out of the Software Crisis Available on Kindle 28 December 2022
  • A lot can happen in a month: on AI art and the fediverse 16 December 2022
  • The response to Out of the Software Crisis has been amazing 5 December 2022
  • Programming is a Pop Culture 21 November 2022
  • WTF is a Framework? 18 November 2022
  • Theory-building and why employee churn is lethal to software companies 16
    November 2022
  • Great apps are rare 15 November 2022
  • (Released!) Out of the Software Crisis: Systems-Thinking for Software
    Projects 14 November 2022
  • Out of the Software Crisis: the ebook is imminent! 11 November 2022
  • I wrote a book – now you must suffer with me 26 October 2022
  • I’m offering research, writing, and notetaking coaching for techies and
    programmers 17 October 2022
  • Playacting genius: the performative logic of reasoning from first
    principles 18 September 2022
  • I don't care how you web dev; I just need more better web apps 4 July 2022
  • Essay Archive 2 June 2022
  • On online collaboration and our obligations as makers of software 2 June
    2022
  • The different kinds of notes 6 May 2022
  • What I learned about markdown from interviewing a bunch of people 6 May
    2022
  • The Colophon Cards User Survey 2 February 2022
  • How to keep up with web development without falling into despair 31 January
    2022
  • Let's just not talk about 2021 and look forward instead 5 January 2022
  • Making Colophon Cards 29 November 2021
  • What do I need to read to be a great at CSS? 19 October 2021
  • The event listening toolkit: five ways to get out of an event handling mess
    11 October 2021
  • FormData and fetch, why is serialising a form such a pain? 29 September
    2021
  • The Single-Page-App Morality Play 6 September 2021
  • Software Crisis 2.0 25 August 2021
  • Lessons in Interactivity, 2021 redux 13 August 2021
  • Nobody gives a hoot about groupthink 29 July 2021
  • Spontant: in praise of grey 26 July 2021
  • Ways of reading without the influence of community 6 July 2021
  • The Open-Source Software bubble that is and the blogging bubble that was 11
    May 2021
  • You are what you do, not what you say or write 4 May 2021
  • The Curious Case Of The Crashing Conic Gradient And How I Used A Technique
    I Learned In The 90s To Fix It 28 April 2021
  • 136 facts every web dev should know before they burn out and turn to
    landscape painting or nude modelling 21 April 2021
  • I’m available for projects and other work 20 April 2021
  • Which type of novelty-seeking web developer are you? 31 March 2021
  • Every Day; a Fair Warning (You Should Read These Articles) 3 March 2020
  • Weeknote 3 - Resistance and the dull blade 10 February 2020
  • Weeknote 2 (2020) - News, Bad News, and Star Wars 2 February 2020
  • Weeknote 1 (2020) - Ending the hiatus 26 January 2020
  • The Ed Tech Conundrum 2 January 2020
  • Thinking about the past, present, and future of web development 1 January
    2020
  • The Web Falls Apart 3 November 2019
  • Weeknote 19 ─ blog redesign and changes at work 27 October 2019
  • When life hands you lemonades, sit down and contemplate the meaning of life
    10 September 2019
  • Weeknote 18 - Uncertainty and Discomfort 11 August 2019
  • Web Dev: The Red Queen Wire Mommy of Modern Tech 6 August 2019
  • Weeknote 16 – Vacation 29 July 2019
  • Weeknote 15 - Counting Down the Days 1 July 2019
  • Weeknote 14 - Shadows and DOMs 25 June 2019
  • Weeknote 13 - The weight of deadlines 16 June 2019
  • That Web Dev Thing Where Everybody Says Something Clever Involving Toast 15
    June 2019
  • SwiftUI, Privacy, macOS, and the Web 9 June 2019
  • Weeknote 12 - The genres of web media 5 June 2019
  • The Aesthetics of Concentration 3 June 2019
  • Weeknote 11 - do I have focus? 29 May 2019
  • Weeknote 10 - A clear view and more reading 20 May 2019
  • Weeknote 9 - Being contemplative, finishing a photo project 12 May 2019
  • Weeknote 8 – Moving, Endgame, and more musings on colour 5 May 2019
  • Weeknote 7 - Story length and that thing about colour 29 April 2019
  • Weeknote 6 – Star Trek, rest and spring finally arrives 22 April 2019
  • Weeknote 5 – Stuff, comics, superheroes, and other nonsense 14 April 2019
  • Weeknote 4 – TV week with The Expanse 7 April 2019
  • Weeknote 3 — MVPs, fatigue, and emotional crutches 31 March 2019
  • Web Development: with great power comes the ability to make great mistakes 
    24 March 2019
  • Weeknote 2 - Web Development Mistakes, Mary Sues, and Icy Spring 24 March
    2019
  • Weeknote 1 18 March 2019
  • Hitchcock and the author construct 12 February 2019
  • Seams, Stitches, And The Decline Of The Mac 3 November 2018
  • Neither Paper Nor Digital Does Active Reading Well 3 September 2018
  • Focusing on market share blinds you to growth 7 January 2018
  • The future of Software Development: Just Business Logic 7 January 2018
  • Remote work is a completely different beast 7 January 2018
  • Hypertext is still the fundamental model of the web 7 January 2018
  • Leftover Thoughts From 2017 7 January 2018
  • Over-engineering is under-engineering 25 November 2017
  • The process is the thing 23 March 2017
  • Von Be Don: A few notes on a recent digital publishing project in Iceland 
    19 February 2017
  • W3C and EME: it isn't about preventing DRM but saving the W3C 14 February
    2017
  • Unpopular opinion: dismissing indirect pointers is a mistake 4 February
    2017
  • Anger feels like poison 24 January 2017
  • Is JavaScript more fragile? 7 December 2016
  • Debating Progressive Enhancement 5 December 2016
  • The downside of believing in Apple 1 November 2016
  • A short primer on Icelandic politics on the day of the 2016 election 29
    October 2016
  • The Tragedy/Farce of the Open Web according to journalists 18 October 2016
  • Notes on debating for the web development community 17 October 2016
  • Addendum on loose coupling and the iOS App Store 11 October 2016
  • Idle thoughts on modularity and loose coupling in digital media 9 October
    2016
  • When fear is rational 24 June 2016
  • Once upon a time, I couldn't imagine a better word processor than Word 7
    June 2016
  • A thought to consider 24 May 2016
  • A few thoughts on standardisation, W3C, and the IDPF 16 May 2016
  • Filling in the gaps – the dynamics of zero marginal cost 21 April 2016
  • Which CMS/blog system would you choose? 12 April 2016
  • A few simplified points on web and document security 30 March 2016
  • Judge the work 21 January 2016
  • Why did Paul Graham argue against equality? 13 January 2016
  • Purpose, Joy, Capability 4 January 2016
  • You can't fix the App Store, so here's how you fix it 20 November 2015
  • Why I am worried about Twitter and why you should be too 4 November 2015
  • The crossroads or the wilderness 23 October 2015
  • You can't solve people problems with software 28 September 2015
  • The discussion about ad blocking is very dumb (but not in the way you
    think) 18 September 2015
  • This is not a book, but it is a podcast 10 September 2015
  • A week of 'This is not a book' 7 September 2015
  • Launching "This is not a book" – what it is and why you should be
    interested 1 September 2015
  • My kingdom for a new bookstore 28 August 2015
  • Modern software sucks 26 August 2015
  • The cost versus benefits of disorganised programming power 25 August 2015
  • Who benefits the most from Open Source Software? 25 August 2015
  • Sex Apocalypse Later 24 August 2015
  • Random thoughts on work and that Amazon thing 23 August 2015
  • Bookmarks – UI flaws and other great capers 14 August 2015
  • Bookmarks – learnable programming 13 August 2015
  • Bookmarks – More money for open-source 12 August 2015
  • Bookmarks – Leaving bosses 11 August 2015
  • Bookmarks – Promoting other people's work 10 August 2015
  • Bookmarks – What Would Kamala Khan Do? 7 August 2015
  • Bookmarks – Trickle down golden geese 6 August 2015
  • Bookmarks – Hateviews are us 5 August 2015
  • Bookmarks – Milk it 4 August 2015
  • Iterating the web away:
    losing the next generation 4 August 2015
  • Bookmarks – You haven't been paying attention 3 August 2015
  • Bookmarks – It's a note card world, we just live in it 31 July 2015
  • Bookmarks – Just call it Smylfeste 30 July 2015
  • Bookmarks – That one is shaped like an idiot 29 July 2015
  • Blogger nostalgia 28 July 2015
  • Bookmarks – Make it simpler 28 July 2015
  • Wet streets cause rain and criminal responsibility 27 July 2015
  • Tweet bookmarks galore 26 July 2015
  • Random links that catch my fancy, part four of ∞ 23 July 2015
  • Random links that catch my fancy, part three of ∞ 22 July 2015
  • Mythic visions of sexuality 21 July 2015
  • Random links that catch my fancy, part two of ∞ 21 July 2015
  • Random links that catch my fancy, part one of ∞ 20 July 2015
  • An exercise for the reader in integration and modularity 17 July 2015
  • How to read my nonsense 17 July 2015
  • Is it distributed or just a disorganised hierarchy? 10 July 2015
  • On the vaunted robustness of the web 10 July 2015
  • The rules of the game have changed for RSS 10 July 2015
  • The web app developer's lament 6 July 2015
  • Other people write about digital media 25 June 2015
  • The plural of 'Medium' is clearly 'clusterfuck' 25 June 2015
  • Burnout 24 June 2015
  • The files Steven Pressfield works with 24 June 2015
  • iOS 9 content blocking extensions are not a mobile advertising armageddon 
    14 June 2015
  • Writing the Other:
    a book that's useful to all writers 3 June 2015
  • Should I make a WWDC prediction?
    Yes, let's 3 June 2015
  • Grim Meathook Present #2 2 June 2015
  • Other people discuss software quality (spoiler: it sucks) 2 June 2015
  • Other people talk about startups and entrepreneurship 2 June 2015
  • A few quick links and thoughts on big web problems 29 May 2015
  • I really want the Supergirl TV show to be fun 25 May 2015
  • Our Grim Meathook Present 25 May 2015
  • The new age of HTML:
    the web is being torn apart 20 May 2015
  • Her movie, his name;
    Mad Max: Fury Road 19 May 2015
  • We are a violent species 19 May 2015
  • Toxic environments:
    inequality in tech is a symptom of something worse 18 May 2015
  • Where I write about Facebook's Instant Articles 16 May 2015
  • Facebook and the media:
    united, they attack the web 15 May 2015
  • Speeding up decision cycles with rules and heuristics 14 May 2015
  • You are here #5:
    UX, design, and CSS as a parasite 14 May 2015
  • You are here #4:
    an epic journey through app dev and male bodies 13 May 2015
  • You are here #3:
    the glorious wonders of online reading await you 12 May 2015
  • 2015-05-11-18-39-16 11 May 2015
  • You are here #2:
    an artisanal curation of reading material 11 May 2015
  • You are here #1:
    a selection of fine links and tweets for your pleasure 10 May 2015
  • 2015-05-07-00-59-18 7 May 2015
  • Five publishing-related thoughts on a Friday afternoon 4 May 2015
  • Why should people read more books? 4 May 2015
  • How is taxing ebooks as print books supposed to work? 4 May 2015
  • Kathy Sierra's Badass: Making Users Awesome – the book you all should read 
    4 March 2015
  • Idle Sunday thoughts about web trends 1 March 2015
  • Repetition only works in fiction 1 March 2015
  • The web has covered the basics — that’s why it’ll get harder from now 1
    March 2015
  • A draft of a chapter of some thoughts on things. 9 January 2015
  • Taking stock of 2013 and 2014 31 December 2014
  • The weather, of course 17 December 2014
  • Publishing business ideas are a dime a dozen 3 December 2014
  • EU VAT changes shift the digital landscape 25 November 2014
  • Money is a poor measure of value 25 November 2014
  • On conferences 13 November 2014
  • Crushed by multinationals 12 November 2014
  • Software as a strategy: prefabricated publishers 7 November 2014
  • Software as strategy in the ebook world 6 November 2014
  • The five types of unpublished books 5 November 2014
  • Four hundred words from Anita Elberse's book "Blockbusters" 4 November 2014
  • The splintered author 4 November 2014
  • There is no war between Amazon and Traditional Publishing 3 November 2014
  • Ebooks suck for learning 10 October 2014
  • The Poisoning of Social Media: A Reading List 9 September 2014
  • Wobbly Amazon 10 August 2014
  • This week's must-read post 24 July 2014
  • Friends don’t let their friends become authors 10 July 2014
  • Both at the same time 4 July 2014
  • So I had to make an ebook cover... 15 April 2014
  • So long, Readmill, and thanks for all the fish 31 March 2014
  • What ebook production problems are self-publishers facing? 24 March 2014
  • Many stories, many truths 13 March 2014
  • Problem statements for digital publishing research 28 February 2014
  • To do, to do 21 February 2014
  • iBooks Author tempts you with bling 20 February 2014
  • Microsoft Word is a liability 19 February 2014
  • The print design mentality 18 February 2014
  • Book contracts 12 February 2014
  • Intermission: sorting through the banal 5 February 2014
  • How to create value with a new thing 30 January 2014
  • HTML is too complex 29 January 2014
  • The ebook as an API 28 January 2014
  • My last word on DRM 27 January 2014
  • Except, except, except 23 January 2014
  • A thought exercise 22 January 2014
  • Losing faith in yourself 21 January 2014
  • Changing your readership mix 20 January 2014
  • Sex, education, readers, and futures: what works, what doesn't 18 January
    2014
  • The various types of readers 17 January 2014
  • The unevenly distributed ebook future 16 January 2014
  • Sex, violence, and stílbrot 15 January 2014
  • Recipe for pundit response to Hugh Howey’s suggestions 14 January 2014
  • Bling it up for education 13 January 2014
  • Blogging has trained me to assume you’re stupid 9 January 2014
  • Ergodic literature 8 January 2014
  • What I thought I wanted versus what I really wanted 7 January 2014
  • The mistake of 'enhancing' novels 6 January 2014
  • Pessimistic ramblings and other fun links (week overview + further reading)
    4 January 2014
  • Stumbling into publishing 3 January 2014
  • The publishing industry's new product categories 2 January 2014
  • The last two Knights and Necromancers stories 1 January 2014
  • Random, loosely connected, thoughts on the future 31 December 2013
  • Old photos posted without context: Reykjavík Cats 29 December 2013
  • Old photos posted without context: Sweep After Use 22 December 2013
  • The Checklist: fix iBooks image handling 20 December 2013
  • Great text transcends nothing 17 December 2013
  • Quarantine all ebooks 17 October 2013
  • The self-publisher's perspective of the ebook market 17 October 2013
  • Light evening trauma 10 October 2013
  • Just say no to ebook CSS and JS 2 October 2013
  • The Google Wave Heuristic 17 September 2013
  • Amazon's biggest ally is Apple 12 September 2013
  • Readmill versus Kindle – Readmill is worth the hassle 26 August 2013
  • Proprietary ebook formats versus DRM 19 August 2013
  • Publishing has catered to dumb for a long while 16 August 2013
  • Computers are too difficult and people are computer illiterate 14 August
    2013
  • Why disruption goes unchecked 12 August 2013
  • Make ebooks worth it 9 August 2013
  • Ebooks and cognitive mapping 8 August 2013
  • Ebook silos, update 7 August 2013
  • Ebook silos and missed opportunities 6 August 2013
  • Technology is not inherently good 5 August 2013
  • Administrative note on baldurbjarnason.com and feeds 29 July 2013
  • Posted without comment 29 July 2013
  • The inefficiencies of joy 24 July 2013
  • Winner takes all versus the Matthew effect 23 July 2013
  • What you people read (on my websites) 22 July 2013
  • Tolerating the heat, noticing the water 19 July 2013
  • If the Kindle fails so will ebooks 18 July 2013
  • Followup to 'this ebook is a lemon' 16 July 2013
  • This ebook is a lemon 12 July 2013
  • Caught between madmen and mercenaries 10 July 2013
  • Major update to Studio Tendra's Oz project 3 July 2013
  • What are self-publishing's biggest pain points? 1 July 2013
  • Intellectual terrain 1 July 2013
  • Good books don't win 26 June 2013
  • Why does it matter? 10 May 2013
  • The OZ Reading Club: Books three and four 7 May 2013
  • Which kind of innovation? 3 May 2013
  • Books and Print Showcase 2 May 2013
  • Peasants 30 April 2013
  • For the love 14 April 2013
  • The idiocies of young men 5 April 2013
  • Studio Tendra's grand and marvellous Oz Reading Club 2 April 2013
  • Iceland’s ‘crowd-sourced’ constitution is dead 29 March 2013
  • The B&N fallacy 27 February 2013
  • Hire me! 19 February 2013
  • A question only you can answer 15 February 2013
  • Respect the reader 6 February 2013
  • 33 observations on the year 2012 5 February 2013
  • Knights and Necromancers: new books and megapacks! 4 February 2013
  • The falcon's shriek 2 January 2013
  • What is actually going on in Iceland 29 December 2012
  • Merry Christmas! 25 December 2012
  • Tag soup is history 21 December 2012
  • Schlock 15 December 2012
  • Strange definitions of 'nice' 5 December 2012
  • Books of Christmas Past 4 December 2012
  • Using IDs in CSS 26 November 2012
  • Design highlights from the Icelandic book season 22 November 2012
  • News, updates, and the Icelandic book market 19 November 2012
  • A response, of sorts 15 November 2012
  • High tide and a room of your own 8 November 2012
  • Knights and Necromancers 2 has been released 6 November 2012
  • The comment-fiction challenge post-mortem 30 October 2012
  • Fantasy, Collapse, and a sense of history 29 October 2012
  • Two questions on putting books on the web 26 October 2012
  • iBooks 3.0 25 October 2012
  • Perceptions of society 22 October 2012
  • What I've been up to 19 October 2012
  • The Readmill comment fiction challenge 1 October 2012
  • Is it safe? 27 September 2012
  • The time work takes 24 September 2012
  • I need your help 21 September 2012
  • Designing the covers 19 September 2012
  • Free Kindle version 19 September 2012
  • What is this? 17 September 2012
  • The stillborn creature 1 August 2012
  • EPUB javascript security 27 July 2012
  • I be writing 21 July 2012
  • Farce 16 July 2012
  • Bad writing 19 June 2012
  • A few random points on DRM 7 June 2012
  • The web and ebooks have little in common 7 May 2012
  • The end of ebook development 26 April 2012
  • Aftermath – notes on the Amazon post 20 April 2012
  • Today is not tomorrow (or, how to beat Amazon) 15 April 2012
  • Bits, bobs, and anecdata 3 April 2012
  • Lessons in interactivity 29 March 2012
  • Hierarchies of ebook design 20 March 2012
  • It's time to treat ebook developers as developers 12 March 2012
  • Code doesn't change minds 7 March 2012
  • Game over, Amazon wins 3 March 2012
  • On CSS Page Templates 2 March 2012
  • Javascript in ebooks 29 February 2012
  • Explanatory windows 20 February 2012
  • Readium and other good intentions 13 February 2012
  • ePub windows and widgets – a proposal 10 February 2012
  • The semantics of ebook widgets 4 February 2012
  • iBooks widgets – to javascript or not to javascript 1 February 2012
  • What do we want from the Kindle platform? 1 February 2012
  • Disruptive crap 27 January 2012
  • Me, elsewhere 26 January 2012
  • The pros and cons of the iBooks 2.0 textbook format 21 January 2012
  • The iBooks 2.0 built-in widgets 20 January 2012
  • The iBooks 2.0 textbook format 19 January 2012
  • The publishing animal 17 January 2012
  • A day of innovation on the future of the book 8 December 2011
  • What a publisher does 30 November 2011
  • Design pseudoscience 8 November 2011
  • A tale of three blog posts 28 October 2011
  • CSS and ebook design 24 October 2011
  • The loss of ambient intimacy 15 September 2011
  • Friday links and reading 26 August 2011
  • Convert or engage 4 August 2011
  • CSS3 Hyphens 30 July 2011
  • Just you & Google 29 July 2011
  • Knowledge is not adoption 24 July 2011
  • HTML5 history API 23 July 2011
  • Your friends, in boxes 17 July 2011
  • Localstorage & messaging in ePub 27 January 2011
  • Javascript in epub 26 January 2011
  • An epub experiment 25 January 2011
  • What is an ebook? 21 December 2010
  • Hypotheses and testing 25 October 2010
  • Identifying publishing innovators 7 October 2010
  • On quality in publishing 7 October 2010
  • An interesting discussion 28 June 2010

You can also find me on Mastodon and Twitter
